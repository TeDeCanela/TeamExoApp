services:
  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
  grpc-usuario:
    build:
      context: .
      dockerfile: servicios/serviciosgRPC/grcpUsuario/Dockerfile
    ports:
      - "50051:3000"
    networks:
      - app-network
    env_file:
      - .env

  grpc-reaccion:
    build:
      context: .
      dockerfile: servicios/serviciosgRPC/grcpReaccion/Dockerfile
    ports:
      - "50052:3000"
    networks:
      - app-network
    env_file:
      - .env

  grpc-notificacion:
    build:
      context: .
      dockerfile: servicios/serviciosgRPC/grcpNotificacion/Dockerfile
    ports:
      - "50053:3000"
    networks:
      - app-network
    env_file:
      - .env

  grpc-recurso:
    build:
      context: .
      dockerfile: servicios/serviciosgRPC/grcpRecurso/Dockerfile
    ports:
      - "50054:3000"
    networks:
      - app-network
    env_file:
      - .env

  grpc-estadistica:
    build:
      context: .
      dockerfile: servicios/serviciosgRPC/grcpEstadistica/Dockerfile
    ports:
      - "50055:3000"
    networks:
      - app-network
    env_file:
      - .env
  rest-service:
    build:
      context: .
      dockerfile: src/Dockerfile
    ports:
      - "3000:3000"
    networks:
      - app-network
    env_file:
      - .env


  nginx:
    image: nginx:1.21.1-alpine
    ports:
      - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - rest-service
      - grpc-usuario
      - grpc-reaccion
      - grpc-notificacion
      - grpc-recurso
      - grpc-estadistica
    networks:
      - app-network

networks:
  app-network:

volumes:
  mongo-data: