events {}

http {
  include       mime.types;
  default_type  application/octet-stream;

  # Definici√≥n de backends para gRPC
  upstream grpc_usuario {
    server grpc-usuario:50059;
  }

  upstream grpc_notificacion {
    server grpc-notificacion:50059;
  }

  upstream grpc_reaccion {
    server grpc-reaccion:50059;
  }

  upstream grpc_estadistica {
    server grpc-estadistica:50059;
  }

  upstream grpc_recurso {
    server grpc-recurso:50059;
  }

  server {
    listen 80;

    # Rutas REST (opcional)
    location /api/ {
      proxy_pass         http://rest-service:3000;
      proxy_http_version 1.1;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection 'upgrade';
      proxy_set_header   Host $host;
      proxy_cache_bypass $http_upgrade;
    }

    # Rutas gRPC
    location /grpc/usuario {
      grpc_pass grpc://grpc_usuario;
      error_page 502 = /error502grpc;
    }

    location /grpc/notificacion {
      grpc_pass grpc://grpc_notificacion;
      error_page 502 = /error502grpc;
    }

    location /grpc/reaccion {
      grpc_pass grpc://grpc_reaccion;
      error_page 502 = /error502grpc;
    }

    location /grpc/estadistica {
      grpc_pass grpc://grpc_estadistica;
      error_page 502 = /error502grpc;
    }

    location /grpc/recurso {
      grpc_pass grpc://grpc_recurso;
      error_page 502 = /error502grpc;
    }

    # Manejo de error para gRPC
    location = /error502grpc {
      internal;
      default_type application/grpc;
      add_header grpc-status 14;
      add_header grpc-message "unavailable";
      return 204;
    }
  }
}
